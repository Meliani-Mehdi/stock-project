Index: src/main/resources/Style/Add_Product.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.Add-Product-Top-HBox{\r\n-fx-background-color:linear-gradient(to bottom, #05b074 20%, #0BF6A4);\r\n-fx-text-fill:#FFFFFF;\r\n-fx-background-radius:10;\r\n}\r\n.Add-Product-Top-Button{\r\n-fx-background-color:transparent;\r\n-fx-text-fill:#FFFFFF;\r\n-fx-font-size:20px;\r\n-fx-font-weight:bold;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/Style/Add_Product.css b/src/main/resources/Style/Add_Product.css
--- a/src/main/resources/Style/Add_Product.css	(revision 46f715496960138b46f487bc97eeab764594556a)
+++ b/src/main/resources/Style/Add_Product.css	(date 1704467253966)
@@ -1,5 +1,5 @@
 .Add-Product-Top-HBox{
--fx-background-color:linear-gradient(to bottom, #05b074 20%, #0BF6A4);
+-fx-background-color: linear-gradient(to bottom, #28B6F6 0%, #00FFA6 50%, #05b074 100%);
 -fx-text-fill:#FFFFFF;
 -fx-background-radius:10;
 }
Index: src/main/java/Org/Main/Controllers/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Org.Main.Controllers;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.geometry.Pos;\r\nimport javafx.geometry.Rectangle2D;\r\nimport javafx.scene.Cursor;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Screen;\r\nimport javafx.stage.Stage;\r\nimport javafx.stage.StageStyle;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.sql.*;\r\nimport java.util.Objects;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class LoginController implements Initializable {\r\n    @FXML\r\n    private AnchorPane Main_Pane;\r\n    private Stage stage;\r\n\r\n    public void Exit(){\r\n        showCustomConfirmationAlert(\"You are about to exit the application\");\r\n    }\r\n    public void Minimize(){\r\n        stage = (Stage) Main_Pane.getScene().getWindow();\r\n        stage.setIconified(true);\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        Main_Pane.requestFocus();\r\n        SignIn_Username_Textfield.addEventFilter(javafx.scene.input.KeyEvent.KEY_PRESSED, event -> {\r\n            if (event.getCode() == KeyCode.ENTER) {\r\n                SignIn_Password_TextField.requestFocus();\r\n            }\r\n        });\r\n        SignIn_Password_TextField.addEventFilter(javafx.scene.input.KeyEvent.KEY_PRESSED, event -> {\r\n            if (event.getCode() == KeyCode.ENTER) {\r\n                Sign_in_Button.fire();\r\n            }\r\n        });\r\n    }\r\n\r\n    private double xOffset, yOffset;\r\n    public void searchLog(String name, String pass){\r\n        String url = \"jdbc:sqlite:main.db\";\r\n        try (Connection conn = DriverManager.getConnection(url);\r\n             PreparedStatement quary = conn.prepareStatement(\"\"\"\r\n                            SELECT * FROM users WHERE username = ? AND password = ? ;\r\n                            \"\"\")) {\r\n\r\n            quary.setString(1,name);\r\n            quary.setString(2,pass);\r\n\r\n            try (ResultSet resultSet = quary.executeQuery()) {\r\n                if (resultSet.next()) {\r\n                    showCustomAlert(\"Welcome \"+name);\r\n                } else {\r\n                    showCustomErrorAlert(\"Wrong user information\");\r\n                }\r\n            }\r\n            conn.close();\r\n        } catch (SQLException e) {\r\n            showCustomErrorAlert(\"Error\");\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private TextField SignIn_Username_Textfield;\r\n\r\n    @FXML\r\n    private PasswordField SignIn_Password_TextField;\r\n\r\n    @FXML\r\n    private Button Sign_in_Button;\r\n    public void Test() {\r\n        searchLog(SignIn_Username_Textfield.getText(),SignIn_Password_TextField.getText());\r\n    }\r\n\r\n\r\n\r\n    //users that I made for testing :\r\n    /*\r\n    mehdi,prrr\r\n    bob,12345\r\n    3dnan,mathIsGood\r\n    kazuha,imOpAF\r\n    test,test\r\n    admin,admin\r\n     */\r\n\r\n    /////////////////////////////////////////// Error alert /////////////////////////////////////////////////////////////////////\r\n    private  void showCustomErrorAlert(String message) {\r\n        Stage alertStage = new Stage();\r\n        alertStage.initModality(Modality.APPLICATION_MODAL);\r\n        alertStage.initStyle(StageStyle.UNDECORATED);\r\n        alertStage.setY(328);\r\n        alertStage.setX(539);\r\n\r\n        AnchorPane alertRoot = new AnchorPane();\r\n        alertRoot.setPrefSize(462, 191);\r\n\r\n        ImageView imageView = new ImageView(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"/Icons/Alert_Icons/dinosaur_alert.png\"))));\r\n        imageView.setFitWidth(64);\r\n        imageView.setFitHeight(64);\r\n        AnchorPane.setTopAnchor(imageView, 10.0);\r\n        AnchorPane.setLeftAnchor(imageView, 199.0);\r\n\r\n        Label errorLabel = new Label(message);\r\n        errorLabel.setFont(Font.font(\"SansSerif Regular\", 23));\r\n        errorLabel.setAlignment(Pos.CENTER);\r\n        errorLabel.setPrefWidth(409);\r\n        AnchorPane.setTopAnchor(errorLabel, 75.0);\r\n        AnchorPane.setLeftAnchor(errorLabel, 27.0);\r\n\r\n        HBox buttonBox = new HBox(30);\r\n        buttonBox.setAlignment(javafx.geometry.Pos.CENTER);\r\n        buttonBox.setPrefSize(436, 59);\r\n        AnchorPane.setTopAnchor(buttonBox, 113.0);\r\n        AnchorPane.setLeftAnchor(buttonBox, 13.0);\r\n\r\n        Button confirmButton = new Button(\"Ok\");\r\n        confirmButton.getStyleClass().add(\"Button\");\r\n        confirmButton.setFont(Font.font(\"SansSerif Regular\", 20));\r\n        confirmButton.setOnAction(e -> alertStage.close());\r\n        confirmButton.setPrefSize(100, 50);\r\n        confirmButton.setCursor(Cursor.HAND);\r\n        buttonBox.getChildren().addAll(confirmButton);\r\n\r\n        alertRoot.getChildren().addAll(imageView, errorLabel, buttonBox);\r\n\r\n        Scene scene = new Scene(alertRoot);\r\n        scene.getStylesheets().add(Objects.requireNonNull(getClass().getResource(\"/Style/Alert._Style.css\")).toExternalForm());\r\n\r\n        alertStage.setScene(scene);\r\n\r\n        alertRoot.setOnMousePressed(e -> {\r\n            xOffset = e.getSceneX();\r\n            yOffset = e.getSceneY();\r\n        });\r\n        alertRoot.setOnMouseDragged(e -> {\r\n                alertStage.setX(e.getScreenX() - xOffset);\r\n                alertStage.setY(e.getScreenY() - yOffset);\r\n        });\r\n        alertStage.showAndWait();\r\n    }\r\n    /////////////////////////////////////////// Message alert /////////////////////////////////////////////////////////////////////\r\n    private  void showCustomAlert(String message) {\r\n        Stage alertStage = new Stage();\r\n        alertStage.initModality(Modality.APPLICATION_MODAL);\r\n        alertStage.initStyle(StageStyle.UNDECORATED);\r\n        alertStage.setY(328);\r\n        alertStage.setX(539);\r\n\r\n        AnchorPane alertRoot = new AnchorPane();\r\n        alertRoot.setPrefSize(462, 191);\r\n\r\n        ImageView imageView = new ImageView(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"/Icons/Alert_Icons/dinosaur.png\"))));\r\n        imageView.setFitWidth(64);\r\n        imageView.setFitHeight(64);\r\n        AnchorPane.setTopAnchor(imageView, 10.0);\r\n        AnchorPane.setLeftAnchor(imageView, 199.0);\r\n\r\n        Label errorLabel = new Label(message);\r\n        errorLabel.setFont(Font.font(\"SansSerif Regular\", 23));\r\n        errorLabel.setAlignment(Pos.CENTER);\r\n        errorLabel.setPrefWidth(409);\r\n        AnchorPane.setTopAnchor(errorLabel, 75.0);\r\n        AnchorPane.setLeftAnchor(errorLabel, 27.0);\r\n\r\n        HBox buttonBox = new HBox(30);\r\n        buttonBox.setAlignment(javafx.geometry.Pos.CENTER);\r\n        buttonBox.setPrefSize(436, 59);\r\n        AnchorPane.setTopAnchor(buttonBox, 113.0);\r\n        AnchorPane.setLeftAnchor(buttonBox, 13.0);\r\n\r\n        Button confirmButton = new Button(\"Ok\");\r\n        confirmButton.getStyleClass().add(\"Button-Green\");\r\n        confirmButton.setFont(Font.font(\"SansSerif Regular\", 20));\r\n        confirmButton.setOnAction(e -> {\r\n            alertStage.close();\r\n            try {\r\n                To_Dashboard();\r\n            } catch (IOException ex) {\r\n                throw new RuntimeException(ex);\r\n            }\r\n        });\r\n        confirmButton.setPrefSize(100, 50);\r\n        confirmButton.setCursor(Cursor.HAND);\r\n        buttonBox.getChildren().addAll(confirmButton);\r\n\r\n        alertRoot.getChildren().addAll(imageView, errorLabel, buttonBox);\r\n\r\n        Scene scene = new Scene(alertRoot);\r\n        scene.getStylesheets().add(Objects.requireNonNull(getClass().getResource(\"/Style/Alert._Style.css\")).toExternalForm());\r\n\r\n        alertStage.setScene(scene);\r\n\r\n        alertRoot.setOnMousePressed(e -> {\r\n            xOffset = e.getSceneX();\r\n            yOffset = e.getSceneY();\r\n        });\r\n        alertRoot.setOnMouseDragged(e -> {\r\n            alertStage.setX(e.getScreenX() - xOffset);\r\n            alertStage.setY(e.getScreenY() - yOffset);\r\n        });\r\n        alertStage.showAndWait();\r\n    }\r\n    /////////////////////////////////////////// confirmation alert /////////////////////////////////////////////////////////////////////\r\n    private  void showCustomConfirmationAlert(String message) {\r\n        Stage alertStage = new Stage();\r\n        alertStage.initModality(Modality.APPLICATION_MODAL);\r\n        alertStage.initStyle(StageStyle.UNDECORATED);\r\n        alertStage.setY(328);\r\n        alertStage.setX(539);\r\n\r\n        AnchorPane alertRoot = new AnchorPane();\r\n        alertRoot.setPrefSize(462, 191);\r\n\r\n        ImageView imageView = new ImageView(new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"/Icons/Alert_Icons/dinosaur_Confirm.png\"))));\r\n        imageView.setFitWidth(64);\r\n        imageView.setFitHeight(64);\r\n        AnchorPane.setTopAnchor(imageView, 10.0);\r\n        AnchorPane.setLeftAnchor(imageView, 199.0);\r\n\r\n        Label errorLabel = new Label(message);\r\n        errorLabel.setFont(Font.font(\"SansSerif Regular\", 23));\r\n        errorLabel.setAlignment(Pos.CENTER);\r\n        errorLabel.setPrefWidth(409);\r\n        AnchorPane.setTopAnchor(errorLabel, 75.0);\r\n        AnchorPane.setLeftAnchor(errorLabel, 27.0);\r\n\r\n        HBox buttonBox = new HBox(30);\r\n        buttonBox.setAlignment(javafx.geometry.Pos.CENTER);\r\n        buttonBox.setPrefSize(436, 59);\r\n        AnchorPane.setTopAnchor(buttonBox, 113.0);\r\n        AnchorPane.setLeftAnchor(buttonBox, 13.0);\r\n\r\n        Button confirmButton = new Button(\"Yes\");\r\n        confirmButton.getStyleClass().add(\"Button-Green\");\r\n        confirmButton.setFont(Font.font(\"SansSerif Regular\", 20));\r\n        confirmButton.setOnAction(e -> {\r\n            stage = (Stage) Main_Pane.getScene().getWindow();\r\n            System.exit(0);\r\n            });\r\n        confirmButton.setPrefSize(100, 50);\r\n        confirmButton.setCursor(Cursor.HAND);\r\n\r\n        Button cancelButton = new Button(\"No\");\r\n        cancelButton.getStyleClass().add(\"Button-Green\");\r\n        cancelButton.setFont(Font.font(\"SansSerif Regular\", 20));\r\n        cancelButton.setOnAction(e -> alertStage.close());\r\n        cancelButton.setPrefSize(100, 50);\r\n        cancelButton.setCursor(Cursor.HAND);\r\n\r\n        buttonBox.getChildren().addAll(confirmButton,cancelButton);\r\n\r\n        alertRoot.getChildren().addAll(imageView, errorLabel, buttonBox);\r\n\r\n        Scene scene = new Scene(alertRoot);\r\n        scene.getStylesheets().add(Objects.requireNonNull(getClass().getResource(\"/Style/Alert._Style.css\")).toExternalForm());\r\n\r\n        alertStage.setScene(scene);\r\n\r\n        alertRoot.setOnMousePressed(e -> {\r\n            xOffset = e.getSceneX();\r\n            yOffset = e.getSceneY();\r\n        });\r\n        alertRoot.setOnMouseDragged(e -> {\r\n            alertStage.setX(e.getScreenX() - xOffset);\r\n            alertStage.setY(e.getScreenY() - yOffset);\r\n        });\r\n        alertStage.showAndWait();\r\n    }\r\n    public void To_Dashboard() throws IOException {\r\n        stage =(Stage) Main_Pane.getScene().getWindow();\r\n        stage.close();\r\n        Screen screen = Screen.getPrimary();\r\n        Rectangle2D bounds = screen.getVisualBounds();\r\n        FXMLLoader loader =new FXMLLoader(getClass().getResource(\"/FXML/Dashboard.fxml\"));\r\n        Parent root = loader.load();\r\n        DashboardController controller =loader.getController();\r\n        controller.display_name(SignIn_Username_Textfield.getText());\r\n        Stage primaryStage=new Stage();\r\n        Scene scene = new Scene(root, bounds.getWidth(), bounds.getHeight());\r\n        primaryStage.setScene(scene);\r\n        primaryStage.setX(0);\r\n        primaryStage.setY(0);\r\n        primaryStage.setWidth(bounds.getWidth());\r\n        primaryStage.setHeight(bounds.getHeight());\r\n        primaryStage.initStyle(StageStyle.UNDECORATED);\r\n        primaryStage.setResizable(true);\r\n        primaryStage.show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Org/Main/Controllers/LoginController.java b/src/main/java/Org/Main/Controllers/LoginController.java
--- a/src/main/java/Org/Main/Controllers/LoginController.java	(revision 46f715496960138b46f487bc97eeab764594556a)
+++ b/src/main/java/Org/Main/Controllers/LoginController.java	(date 1704463525798)
@@ -55,8 +55,13 @@
                 Sign_in_Button.fire();
             }
         });
-    }
+
 
+    }
+    public void Last_User(String username,String password) {
+        SignIn_Username_Textfield.setText(username);
+        SignIn_Password_TextField.setText(password);
+    }
     private double xOffset, yOffset;
     public void searchLog(String name, String pass){
         String url = "jdbc:sqlite:main.db";
Index: src/main/java/Org/Main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Org.Main;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.stage.StageStyle;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.Objects;\r\n\r\npublic class Main extends Application {\r\n    private double xOffset, yOffset;\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        Font.loadFont(getClass().getResourceAsStream(\"/Fonts/Quicksand-VariableFont_wght.ttf\"), 12);\r\n        Parent root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource(\"/FXML/Login.fxml\")));\r\n        Scene scene=new Scene(root);\r\n        createDatabase();\r\n        root.setOnMousePressed(e -> {\r\n            xOffset = e.getSceneX();\r\n            yOffset = e.getSceneY();\r\n        });\r\n        root.setOnMouseDragged(e -> {\r\n            if(yOffset<=37){\r\n                stage.setX(e.getScreenX() - xOffset);\r\n                stage.setY(e.getScreenY() - yOffset);\r\n            }\r\n        });\r\n        stage.setScene(scene);\r\n        stage.initStyle(StageStyle.UNDECORATED);\r\n        stage.getScene().getRoot().setStyle(\"-fx-background-radius: 10;\");\r\n        stage.show();\r\n    }\r\n\r\n    public static void createDatabase() {\r\n        String url = \"jdbc:sqlite:main.db\";\r\n        try (Connection conn = DriverManager.getConnection(url);\r\n             Statement statement = conn.createStatement()) {\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS clients (\r\n                                id INTEGER PRIMARY KEY,\r\n                                name TEXT NOT NULL,\r\n                                adresse TEXT,\r\n                                phone_num TEXT,\r\n                                sold_total REAL,\r\n                                reste REAL,\r\n                                paid REAL\r\n                            );\"\"\");\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS deposits (\r\n                                id INTEGER PRIMARY KEY,\r\n                                name TEXT NOT NULL,\r\n                                solde REAL,\r\n                                reste REAL,\r\n                                payment REAL,\r\n                                id_provider INTEGER,\r\n                                id_client INTEGER,\r\n                                id_seller INTEGER,\r\n                                type TEXT,\r\n                                payment_status TEXT\r\n                            );\"\"\");\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS factures (\r\n                                id INTEGER PRIMARY KEY,\r\n                                date DATE NOT NULL,\r\n                                update_date DATE,\r\n                                update_time TIMESTAMP,\r\n                                solde REAL,\r\n                                reste REAL,\r\n                                payment REAL,\r\n                                id_provider INTEGER,\r\n                                id_client INTEGER,\r\n                                id_seller INTEGER,\r\n                                type TEXT,\r\n                                payment_status TEXT\r\n                            );\"\"\");\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS groupes (\r\n                                id INTEGER PRIMARY KEY,\r\n                                name TEXT NOT NULL,\r\n                                marge REAL\r\n                            );\"\"\");\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS products (\r\n                                id INTEGER PRIMARY KEY,\r\n                                bar_code VARCHAR NOT NULL,\r\n                                reference VARCHAR,\r\n                                name VARCHAR NOT NULL,\r\n                                buying_price REAL,\r\n                                selling_price REAL,\r\n                                stock INTEGER,\r\n                                photo VARCHAR,\r\n                                id_groupe INTEGER\r\n                            );\"\"\");\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS product_facts (\r\n                                id INTEGER PRIMARY KEY,\r\n                                id_fact INTEGER,\r\n                                id_prod INTEGER,\r\n                                product_price REAL,\r\n                                product_qte INTEGER,\r\n                                tva REAL\r\n                            );\"\"\");\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS bon_de_livraisons (\r\n                                id INTEGER PRIMARY KEY,\r\n                                date DATE NOT NULL,\r\n                                old_reste REAL,\r\n                                reste REAL,\r\n                                payment REAL,\r\n                                id_client INTEGER,\r\n                                id_user INTEGER,\r\n                                id_provider INTEGER\r\n                            );\"\"\");\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS providers (\r\n                                id INTEGER PRIMARY KEY,\r\n                                name TEXT NOT NULL,\r\n                                adresse TEXT,\r\n                                phone_num TEXT,\r\n                                sold_total REAL,\r\n                                reste REAL,\r\n                                paid REAL\r\n                            );\"\"\");\r\n\r\n            statement.execute(\"\"\"\r\n                            CREATE TABLE IF NOT EXISTS users (\r\n                                id INTEGER PRIMARY KEY,\r\n                                username TEXT NOT NULL,\r\n                                password TEXT NOT NULL,\r\n                                'last' INTEGER NOT NULL\r\n                            );\"\"\");\r\n            conn.close();\r\n        } catch (SQLException e) {\r\n            System.out.println(\"error\");\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Org/Main/Main.java b/src/main/java/Org/Main/Main.java
--- a/src/main/java/Org/Main/Main.java	(revision 46f715496960138b46f487bc97eeab764594556a)
+++ b/src/main/java/Org/Main/Main.java	(date 1704463978199)
@@ -19,9 +19,11 @@
     @Override
     public void start(Stage stage) throws Exception {
         Font.loadFont(getClass().getResourceAsStream("/Fonts/Quicksand-VariableFont_wght.ttf"), 12);
-        Parent root = FXMLLoader.load(Objects.requireNonNull(getClass().getResource("/FXML/Login.fxml")));
+        FXMLLoader loader =new FXMLLoader(Objects.requireNonNull(getClass().getResource("/FXML/Login.fxml")));
+        Parent root = loader.load();
         Scene scene=new Scene(root);
         createDatabase();
+
         root.setOnMousePressed(e -> {
             xOffset = e.getSceneX();
             yOffset = e.getSceneY();
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"ExtractMethodRecommender\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"FieldMayBeFinal\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"JavaFxDefaultTag\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"PatternVariableCanBeUsed\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"SameParameterValue\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"SpellCheckingInspection\" enabled=\"false\" level=\"TYPO\" enabled_by_default=\"false\">\r\n      <option name=\"processCode\" value=\"true\" />\r\n      <option name=\"processLiterals\" value=\"true\" />\r\n      <option name=\"processComments\" value=\"true\" />\r\n    </inspection_tool>\r\n    <inspection_tool class=\"SuspiciousListRemoveInLoop\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"VulnerableLibrariesLocal\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"isIgnoringEnabled\" value=\"true\" />\r\n      <option name=\"ignoredModules\">\r\n        <list>\r\n          <option value=\"Gl_Project\" />\r\n        </list>\r\n      </option>\r\n      <option name=\"ignoredPackages\">\r\n        <list>\r\n          <option value=\"com.google.protobuf:protobuf-java:3.11.4\" />\r\n        </list>\r\n      </option>\r\n      <option name=\"ignoredReasons\">\r\n        <list>\r\n          <option value=\"Not exploitable\" />\r\n        </list>\r\n      </option>\r\n    </inspection_tool>\r\n    <inspection_tool class=\"XmlPathReference\" enabled=\"false\" level=\"ERROR\" enabled_by_default=\"false\" />\r\n    <inspection_tool class=\"unused\" enabled=\"false\" level=\"WARNING\" enabled_by_default=\"false\" checkParameterExcludingHierarchy=\"false\">\r\n      <option name=\"LOCAL_VARIABLE\" value=\"true\" />\r\n      <option name=\"FIELD\" value=\"true\" />\r\n      <option name=\"METHOD\" value=\"true\" />\r\n      <option name=\"CLASS\" value=\"true\" />\r\n      <option name=\"PARAMETER\" value=\"true\" />\r\n      <option name=\"REPORT_PARAMETER_FOR_PUBLIC_METHODS\" value=\"true\" />\r\n      <option name=\"ADD_MAINS_TO_ENTRIES\" value=\"true\" />\r\n      <option name=\"ADD_APPLET_TO_ENTRIES\" value=\"true\" />\r\n      <option name=\"ADD_SERVLET_TO_ENTRIES\" value=\"true\" />\r\n      <option name=\"ADD_NONJAVA_TO_ENTRIES\" value=\"true\" />\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 46f715496960138b46f487bc97eeab764594556a)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1704467109824)
@@ -5,6 +5,7 @@
     <inspection_tool class="FieldMayBeFinal" enabled="false" level="WARNING" enabled_by_default="false" />
     <inspection_tool class="JavaFxDefaultTag" enabled="false" level="WARNING" enabled_by_default="false" />
     <inspection_tool class="PatternVariableCanBeUsed" enabled="false" level="WARNING" enabled_by_default="false" />
+    <inspection_tool class="RedundantExplicitClose" enabled="false" level="WARNING" enabled_by_default="false" />
     <inspection_tool class="SameParameterValue" enabled="false" level="WARNING" enabled_by_default="false" />
     <inspection_tool class="SpellCheckingInspection" enabled="false" level="TYPO" enabled_by_default="false">
       <option name="processCode" value="true" />
